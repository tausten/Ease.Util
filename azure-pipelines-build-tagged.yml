# Pipeline for building versioned artifacts
trigger:
  batch: true
  branches:
    include:
    - master
    - develop

# Work around the default PR trigger on everything... :facepalm:
pr: 
  branches:
    exclude:
    - '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  displayName: 'Extract version number details'
  inputs:
    runtime: 'core'

- task: FileContenttoVariable@2
  displayName: 'Reading CHANGELOG.md'
  inputs:
    FilePath: 'CHANGELOG.md'
    VariableName: 'ReleaseNotes'

- task: Assembly-Info-NetCore@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: '**/*Ease.Util.csproj'
    InsertAttributes: true
    GeneratePackageOnBuild: true
    PackageReleaseNotes: $(ReleaseNotes)
    VersionNumber: '$(GitVersion.AssemblySemVer)'
    FileVersionNumber: '$(GitVersion.AssemblySemFileVer)'
    InformationalVersion: '$(GitVersion.InformationalVersion)'
    PackageVersion: '$(GitVersion.FullSemVer)'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet'

- task: NuGetCommand@2
  displayName: 'NuGet Restore'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Test solution'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**\*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

# DocFx building
- task: DocFxTask@0
  inputs:
    solution: 'docfx_project/docfx.json'

- task: CopyFiles@2
  displayName: 'Copy DocFx output to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\docfx_project\_site\**'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
