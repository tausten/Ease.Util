### YamlMime:XRefMap
sorted: true
references:
- uid: Ease.Util.Collections.Generic
  name: Ease.Util.Collections.Generic
  href: api/Ease.Util.Collections.Generic.html
  commentId: N:Ease.Util.Collections.Generic
  fullName: Ease.Util.Collections.Generic
  nameWithType: Ease.Util.Collections.Generic
- uid: Ease.Util.Collections.Generic.MapOfCollections`3
  name: MapOfCollections<TKey, TCollection, TValue>
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html
  commentId: T:Ease.Util.Collections.Generic.MapOfCollections`3
  name.vb: MapOfCollections(Of TKey, TCollection, TValue)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.#ctor(System.Func{`1},System.Action{`1,`2},System.Action{`1,`2})
  name: MapOfCollections(Func<TCollection>, Action<TCollection, TValue>, Action<TCollection, TValue>)
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3__ctor_System_Func__1__System_Action__1__2__System_Action__1__2__
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.#ctor(System.Func{`1},System.Action{`1,`2},System.Action{`1,`2})
  name.vb: MapOfCollections(Func(Of TCollection), Action(Of TCollection, TValue), Action(Of TCollection, TValue))
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.MapOfCollections(System.Func<TCollection>, System.Action<TCollection, TValue>, System.Action<TCollection, TValue>)
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).MapOfCollections(System.Func(Of TCollection), System.Action(Of TCollection, TValue), System.Action(Of TCollection, TValue))
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.MapOfCollections(Func<TCollection>, Action<TCollection, TValue>, Action<TCollection, TValue>)
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).MapOfCollections(Func(Of TCollection), Action(Of TCollection, TValue), Action(Of TCollection, TValue))
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.#ctor*
  name: MapOfCollections
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3__ctor_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.#ctor
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.MapOfCollections
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).MapOfCollections
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.MapOfCollections
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).MapOfCollections
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Add(`0,`2)
  name: Add(TKey, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Add__0__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.Add(`0,`2)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Add(TKey, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Add(TKey, TValue)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Add(TKey, TValue)
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Add(TKey, TValue)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Add*
  name: Add
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Add_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.Add
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Add
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Add
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Add
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Add
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.AddValueTo(`1,`2)
  name: AddValueTo(TCollection, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_AddValueTo__1__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.AddValueTo(`1,`2)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.AddValueTo(TCollection, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).AddValueTo(TCollection, TValue)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.AddValueTo(TCollection, TValue)
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).AddValueTo(TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.AddValueTo*
  name: AddValueTo
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_AddValueTo_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.AddValueTo
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.AddValueTo
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).AddValueTo
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.AddValueTo
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).AddValueTo
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Clear
  name: Clear()
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Clear
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.Clear
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Clear()
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Clear()
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Clear()
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Clear()
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Clear*
  name: Clear
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Clear_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.Clear
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Clear
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Clear
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Clear
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Clear
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Item(`0)
  name: Item[TKey]
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Item__0_
  commentId: P:Ease.Util.Collections.Generic.MapOfCollections`3.Item(`0)
  name.vb: Item(TKey)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Item[TKey]
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Item(TKey)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Item[TKey]
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Item(TKey)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Item*
  name: Item
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Item_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.Item
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Item
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Item
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Item
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Item
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.NewCollection
  name: NewCollection()
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_NewCollection
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.NewCollection
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.NewCollection()
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).NewCollection()
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.NewCollection()
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).NewCollection()
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.NewCollection*
  name: NewCollection
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_NewCollection_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.NewCollection
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.NewCollection
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).NewCollection
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.NewCollection
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).NewCollection
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Remove(`0,`2)
  name: Remove(TKey, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Remove__0__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.Remove(`0,`2)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Remove(TKey, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Remove(TKey, TValue)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Remove(TKey, TValue)
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Remove(TKey, TValue)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.Remove*
  name: Remove
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_Remove_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.Remove
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.Remove
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).Remove
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.Remove
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).Remove
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.RemoveValueFrom(`1,`2)
  name: RemoveValueFrom(TCollection, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_RemoveValueFrom__1__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfCollections`3.RemoveValueFrom(`1,`2)
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.RemoveValueFrom(TCollection, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).RemoveValueFrom(TCollection, TValue)
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.RemoveValueFrom(TCollection, TValue)
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).RemoveValueFrom(TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfCollections`3.RemoveValueFrom*
  name: RemoveValueFrom
  href: api/Ease.Util.Collections.Generic.MapOfCollections-3.html#Ease_Util_Collections_Generic_MapOfCollections_3_RemoveValueFrom_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfCollections`3.RemoveValueFrom
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfCollections<TKey, TCollection, TValue>.RemoveValueFrom
  fullName.vb: Ease.Util.Collections.Generic.MapOfCollections(Of TKey, TCollection, TValue).RemoveValueFrom
  nameWithType: MapOfCollections<TKey, TCollection, TValue>.RemoveValueFrom
  nameWithType.vb: MapOfCollections(Of TKey, TCollection, TValue).RemoveValueFrom
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3
  name: MapOfConcreteCollections<TKey, TCollection, TValue>
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html
  commentId: T:Ease.Util.Collections.Generic.MapOfConcreteCollections`3
  name.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue)
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue)
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.AddValueTo(`1,`2)
  name: AddValueTo(TCollection, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_AddValueTo__1__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.AddValueTo(`1,`2)
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.AddValueTo(TCollection, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).AddValueTo(TCollection, TValue)
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.AddValueTo(TCollection, TValue)
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).AddValueTo(TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.AddValueTo*
  name: AddValueTo
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_AddValueTo_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.AddValueTo
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.AddValueTo
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).AddValueTo
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.AddValueTo
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).AddValueTo
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.NewCollection
  name: NewCollection()
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_NewCollection
  commentId: M:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.NewCollection
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.NewCollection()
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).NewCollection()
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.NewCollection()
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).NewCollection()
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.NewCollection*
  name: NewCollection
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_NewCollection_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.NewCollection
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.NewCollection
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).NewCollection
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.NewCollection
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).NewCollection
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.RemoveValueFrom(`1,`2)
  name: RemoveValueFrom(TCollection, TValue)
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_RemoveValueFrom__1__2_
  commentId: M:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.RemoveValueFrom(`1,`2)
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.RemoveValueFrom(TCollection, TValue)
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).RemoveValueFrom(TCollection, TValue)
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.RemoveValueFrom(TCollection, TValue)
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).RemoveValueFrom(TCollection, TValue)
- uid: Ease.Util.Collections.Generic.MapOfConcreteCollections`3.RemoveValueFrom*
  name: RemoveValueFrom
  href: api/Ease.Util.Collections.Generic.MapOfConcreteCollections-3.html#Ease_Util_Collections_Generic_MapOfConcreteCollections_3_RemoveValueFrom_
  commentId: Overload:Ease.Util.Collections.Generic.MapOfConcreteCollections`3.RemoveValueFrom
  isSpec: "True"
  fullName: Ease.Util.Collections.Generic.MapOfConcreteCollections<TKey, TCollection, TValue>.RemoveValueFrom
  fullName.vb: Ease.Util.Collections.Generic.MapOfConcreteCollections(Of TKey, TCollection, TValue).RemoveValueFrom
  nameWithType: MapOfConcreteCollections<TKey, TCollection, TValue>.RemoveValueFrom
  nameWithType.vb: MapOfConcreteCollections(Of TKey, TCollection, TValue).RemoveValueFrom
- uid: Ease.Util.Collections.Generic.MapOfHashSets`2
  name: MapOfHashSets<TKey, TValue>
  href: api/Ease.Util.Collections.Generic.MapOfHashSets-2.html
  commentId: T:Ease.Util.Collections.Generic.MapOfHashSets`2
  name.vb: MapOfHashSets(Of TKey, TValue)
  fullName: Ease.Util.Collections.Generic.MapOfHashSets<TKey, TValue>
  fullName.vb: Ease.Util.Collections.Generic.MapOfHashSets(Of TKey, TValue)
  nameWithType: MapOfHashSets<TKey, TValue>
  nameWithType.vb: MapOfHashSets(Of TKey, TValue)
- uid: Ease.Util.Collections.Generic.MapOfLists`2
  name: MapOfLists<TKey, TValue>
  href: api/Ease.Util.Collections.Generic.MapOfLists-2.html
  commentId: T:Ease.Util.Collections.Generic.MapOfLists`2
  name.vb: MapOfLists(Of TKey, TValue)
  fullName: Ease.Util.Collections.Generic.MapOfLists<TKey, TValue>
  fullName.vb: Ease.Util.Collections.Generic.MapOfLists(Of TKey, TValue)
  nameWithType: MapOfLists<TKey, TValue>
  nameWithType.vb: MapOfLists(Of TKey, TValue)
- uid: Ease.Util.Disposably
  name: Ease.Util.Disposably
  href: api/Ease.Util.Disposably.html
  commentId: N:Ease.Util.Disposably
  fullName: Ease.Util.Disposably
  nameWithType: Ease.Util.Disposably
- uid: Ease.Util.Disposably.FactoryScoped`1
  name: FactoryScoped<T>
  href: api/Ease.Util.Disposably.FactoryScoped-1.html
  commentId: T:Ease.Util.Disposably.FactoryScoped`1
  name.vb: FactoryScoped(Of T)
  fullName: Ease.Util.Disposably.FactoryScoped<T>
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T)
  nameWithType: FactoryScoped<T>
  nameWithType.vb: FactoryScoped(Of T)
- uid: Ease.Util.Disposably.FactoryScoped`1.#ctor(System.Func{`0},System.Action{`0})
  name: FactoryScoped(Func<T>, Action<T>)
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1__ctor_System_Func__0__System_Action__0__
  commentId: M:Ease.Util.Disposably.FactoryScoped`1.#ctor(System.Func{`0},System.Action{`0})
  name.vb: FactoryScoped(Func(Of T), Action(Of T))
  fullName: Ease.Util.Disposably.FactoryScoped<T>.FactoryScoped(System.Func<T>, System.Action<T>)
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).FactoryScoped(System.Func(Of T), System.Action(Of T))
  nameWithType: FactoryScoped<T>.FactoryScoped(Func<T>, Action<T>)
  nameWithType.vb: FactoryScoped(Of T).FactoryScoped(Func(Of T), Action(Of T))
- uid: Ease.Util.Disposably.FactoryScoped`1.#ctor*
  name: FactoryScoped
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1__ctor_
  commentId: Overload:Ease.Util.Disposably.FactoryScoped`1.#ctor
  isSpec: "True"
  fullName: Ease.Util.Disposably.FactoryScoped<T>.FactoryScoped
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).FactoryScoped
  nameWithType: FactoryScoped<T>.FactoryScoped
  nameWithType.vb: FactoryScoped(Of T).FactoryScoped
- uid: Ease.Util.Disposably.FactoryScoped`1.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Disposably.FactoryScoped`1.DisposeUnmanagedObjects
  fullName: Ease.Util.Disposably.FactoryScoped<T>.DisposeUnmanagedObjects()
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).DisposeUnmanagedObjects()
  nameWithType: FactoryScoped<T>.DisposeUnmanagedObjects()
  nameWithType.vb: FactoryScoped(Of T).DisposeUnmanagedObjects()
- uid: Ease.Util.Disposably.FactoryScoped`1.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Disposably.FactoryScoped`1.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Disposably.FactoryScoped<T>.DisposeUnmanagedObjects
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).DisposeUnmanagedObjects
  nameWithType: FactoryScoped<T>.DisposeUnmanagedObjects
  nameWithType.vb: FactoryScoped(Of T).DisposeUnmanagedObjects
- uid: Ease.Util.Disposably.FactoryScoped`1.Instance
  name: Instance
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1_Instance
  commentId: P:Ease.Util.Disposably.FactoryScoped`1.Instance
  fullName: Ease.Util.Disposably.FactoryScoped<T>.Instance
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).Instance
  nameWithType: FactoryScoped<T>.Instance
  nameWithType.vb: FactoryScoped(Of T).Instance
- uid: Ease.Util.Disposably.FactoryScoped`1.Instance*
  name: Instance
  href: api/Ease.Util.Disposably.FactoryScoped-1.html#Ease_Util_Disposably_FactoryScoped_1_Instance_
  commentId: Overload:Ease.Util.Disposably.FactoryScoped`1.Instance
  isSpec: "True"
  fullName: Ease.Util.Disposably.FactoryScoped<T>.Instance
  fullName.vb: Ease.Util.Disposably.FactoryScoped(Of T).Instance
  nameWithType: FactoryScoped<T>.Instance
  nameWithType.vb: FactoryScoped(Of T).Instance
- uid: Ease.Util.Disposably.SafeDisposable
  name: SafeDisposable
  href: api/Ease.Util.Disposably.SafeDisposable.html
  commentId: T:Ease.Util.Disposably.SafeDisposable
  fullName: Ease.Util.Disposably.SafeDisposable
  nameWithType: SafeDisposable
- uid: Ease.Util.Disposably.SafeDisposable.CheckDisposed
  name: CheckDisposed()
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_CheckDisposed
  commentId: M:Ease.Util.Disposably.SafeDisposable.CheckDisposed
  fullName: Ease.Util.Disposably.SafeDisposable.CheckDisposed()
  nameWithType: SafeDisposable.CheckDisposed()
- uid: Ease.Util.Disposably.SafeDisposable.CheckDisposed*
  name: CheckDisposed
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_CheckDisposed_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.CheckDisposed
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.CheckDisposed
  nameWithType: SafeDisposable.CheckDisposed
- uid: Ease.Util.Disposably.SafeDisposable.Dispose
  name: Dispose()
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_Dispose
  commentId: M:Ease.Util.Disposably.SafeDisposable.Dispose
  fullName: Ease.Util.Disposably.SafeDisposable.Dispose()
  nameWithType: SafeDisposable.Dispose()
- uid: Ease.Util.Disposably.SafeDisposable.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_Dispose_System_Boolean_
  commentId: M:Ease.Util.Disposably.SafeDisposable.Dispose(System.Boolean)
  fullName: Ease.Util.Disposably.SafeDisposable.Dispose(System.Boolean)
  nameWithType: SafeDisposable.Dispose(Boolean)
- uid: Ease.Util.Disposably.SafeDisposable.Dispose*
  name: Dispose
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_Dispose_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.Dispose
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.Dispose
  nameWithType: SafeDisposable.Dispose
- uid: Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects
  name: DisposeManagedObjects()
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_DisposeManagedObjects
  commentId: M:Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects
  fullName: Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects()
  nameWithType: SafeDisposable.DisposeManagedObjects()
- uid: Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects*
  name: DisposeManagedObjects
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_DisposeManagedObjects_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.DisposeManagedObjects
  nameWithType: SafeDisposable.DisposeManagedObjects
- uid: Ease.Util.Disposably.SafeDisposable.IsDisposed
  name: IsDisposed
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_IsDisposed
  commentId: P:Ease.Util.Disposably.SafeDisposable.IsDisposed
  fullName: Ease.Util.Disposably.SafeDisposable.IsDisposed
  nameWithType: SafeDisposable.IsDisposed
- uid: Ease.Util.Disposably.SafeDisposable.IsDisposed*
  name: IsDisposed
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_IsDisposed_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.IsDisposed
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.IsDisposed
  nameWithType: SafeDisposable.IsDisposed
- uid: Ease.Util.Disposably.SafeDisposable.Lock
  name: Lock
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_Lock
  commentId: P:Ease.Util.Disposably.SafeDisposable.Lock
  fullName: Ease.Util.Disposably.SafeDisposable.Lock
  nameWithType: SafeDisposable.Lock
- uid: Ease.Util.Disposably.SafeDisposable.Lock*
  name: Lock
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_Lock_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.Lock
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.Lock
  nameWithType: SafeDisposable.Lock
- uid: Ease.Util.Disposably.SafeDisposable.NullifyLargeFields
  name: NullifyLargeFields()
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_NullifyLargeFields
  commentId: M:Ease.Util.Disposably.SafeDisposable.NullifyLargeFields
  fullName: Ease.Util.Disposably.SafeDisposable.NullifyLargeFields()
  nameWithType: SafeDisposable.NullifyLargeFields()
- uid: Ease.Util.Disposably.SafeDisposable.NullifyLargeFields*
  name: NullifyLargeFields
  href: api/Ease.Util.Disposably.SafeDisposable.html#Ease_Util_Disposably_SafeDisposable_NullifyLargeFields_
  commentId: Overload:Ease.Util.Disposably.SafeDisposable.NullifyLargeFields
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposable.NullifyLargeFields
  nameWithType: SafeDisposable.NullifyLargeFields
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer
  name: SafeDisposableWithFinalizer
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html
  commentId: T:Ease.Util.Disposably.SafeDisposableWithFinalizer
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer
  nameWithType: SafeDisposableWithFinalizer
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects
  name: DisposeManagedObjects()
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_DisposeManagedObjects
  commentId: M:Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects()
  nameWithType: SafeDisposableWithFinalizer.DisposeManagedObjects()
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects*
  name: DisposeManagedObjects
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_DisposeManagedObjects_
  commentId: Overload:Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeManagedObjects
  nameWithType: SafeDisposableWithFinalizer.DisposeManagedObjects
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects()
  nameWithType: SafeDisposableWithFinalizer.DisposeUnmanagedObjects()
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.DisposeUnmanagedObjects
  nameWithType: SafeDisposableWithFinalizer.DisposeUnmanagedObjects
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize
  name: Finalize()
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_Finalize
  commentId: M:Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize()
  nameWithType: SafeDisposableWithFinalizer.Finalize()
- uid: Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize*
  name: Finalize
  href: api/Ease.Util.Disposably.SafeDisposableWithFinalizer.html#Ease_Util_Disposably_SafeDisposableWithFinalizer_Finalize_
  commentId: Overload:Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize
  isSpec: "True"
  fullName: Ease.Util.Disposably.SafeDisposableWithFinalizer.Finalize
  nameWithType: SafeDisposableWithFinalizer.Finalize
- uid: Ease.Util.Disposably.Scoped
  name: Scoped
  href: api/Ease.Util.Disposably.Scoped.html
  commentId: T:Ease.Util.Disposably.Scoped
  fullName: Ease.Util.Disposably.Scoped
  nameWithType: Scoped
- uid: Ease.Util.Disposably.Scoped.#ctor(System.Action,System.Action)
  name: Scoped(Action, Action)
  href: api/Ease.Util.Disposably.Scoped.html#Ease_Util_Disposably_Scoped__ctor_System_Action_System_Action_
  commentId: M:Ease.Util.Disposably.Scoped.#ctor(System.Action,System.Action)
  fullName: Ease.Util.Disposably.Scoped.Scoped(System.Action, System.Action)
  nameWithType: Scoped.Scoped(Action, Action)
- uid: Ease.Util.Disposably.Scoped.#ctor*
  name: Scoped
  href: api/Ease.Util.Disposably.Scoped.html#Ease_Util_Disposably_Scoped__ctor_
  commentId: Overload:Ease.Util.Disposably.Scoped.#ctor
  isSpec: "True"
  fullName: Ease.Util.Disposably.Scoped.Scoped
  nameWithType: Scoped.Scoped
- uid: Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Disposably.Scoped.html#Ease_Util_Disposably_Scoped_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects
  fullName: Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects()
  nameWithType: Scoped.DisposeUnmanagedObjects()
- uid: Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Disposably.Scoped.html#Ease_Util_Disposably_Scoped_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Disposably.Scoped.DisposeUnmanagedObjects
  nameWithType: Scoped.DisposeUnmanagedObjects
- uid: Ease.Util.Disposably.ScopedLock
  name: ScopedLock
  href: api/Ease.Util.Disposably.ScopedLock.html
  commentId: T:Ease.Util.Disposably.ScopedLock
  fullName: Ease.Util.Disposably.ScopedLock
  nameWithType: ScopedLock
- uid: Ease.Util.Disposably.ScopedLock.#ctor(System.Object)
  name: ScopedLock(Object)
  href: api/Ease.Util.Disposably.ScopedLock.html#Ease_Util_Disposably_ScopedLock__ctor_System_Object_
  commentId: M:Ease.Util.Disposably.ScopedLock.#ctor(System.Object)
  fullName: Ease.Util.Disposably.ScopedLock.ScopedLock(System.Object)
  nameWithType: ScopedLock.ScopedLock(Object)
- uid: Ease.Util.Disposably.ScopedLock.#ctor*
  name: ScopedLock
  href: api/Ease.Util.Disposably.ScopedLock.html#Ease_Util_Disposably_ScopedLock__ctor_
  commentId: Overload:Ease.Util.Disposably.ScopedLock.#ctor
  isSpec: "True"
  fullName: Ease.Util.Disposably.ScopedLock.ScopedLock
  nameWithType: ScopedLock.ScopedLock
- uid: Ease.Util.Extensions
  name: Ease.Util.Extensions
  href: api/Ease.Util.Extensions.html
  commentId: N:Ease.Util.Extensions
  fullName: Ease.Util.Extensions
  nameWithType: Ease.Util.Extensions
- uid: Ease.Util.Extensions.AssemblyExtensions
  name: AssemblyExtensions
  href: api/Ease.Util.Extensions.AssemblyExtensions.html
  commentId: T:Ease.Util.Extensions.AssemblyExtensions
  fullName: Ease.Util.Extensions.AssemblyExtensions
  nameWithType: AssemblyExtensions
- uid: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream(System.Reflection.Assembly,System.String)
  name: GetResourceBySuffixAsStream(Assembly, String)
  href: api/Ease.Util.Extensions.AssemblyExtensions.html#Ease_Util_Extensions_AssemblyExtensions_GetResourceBySuffixAsStream_System_Reflection_Assembly_System_String_
  commentId: M:Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream(System.Reflection.Assembly,System.String)
  fullName: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream(System.Reflection.Assembly, System.String)
  nameWithType: AssemblyExtensions.GetResourceBySuffixAsStream(Assembly, String)
- uid: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream*
  name: GetResourceBySuffixAsStream
  href: api/Ease.Util.Extensions.AssemblyExtensions.html#Ease_Util_Extensions_AssemblyExtensions_GetResourceBySuffixAsStream_
  commentId: Overload:Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream
  isSpec: "True"
  fullName: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsStream
  nameWithType: AssemblyExtensions.GetResourceBySuffixAsStream
- uid: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString(System.Reflection.Assembly,System.String,System.Text.Encoding)
  name: GetResourceBySuffixAsString(Assembly, String, Encoding)
  href: api/Ease.Util.Extensions.AssemblyExtensions.html#Ease_Util_Extensions_AssemblyExtensions_GetResourceBySuffixAsString_System_Reflection_Assembly_System_String_System_Text_Encoding_
  commentId: M:Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString(System.Reflection.Assembly,System.String,System.Text.Encoding)
  fullName: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString(System.Reflection.Assembly, System.String, System.Text.Encoding)
  nameWithType: AssemblyExtensions.GetResourceBySuffixAsString(Assembly, String, Encoding)
- uid: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString*
  name: GetResourceBySuffixAsString
  href: api/Ease.Util.Extensions.AssemblyExtensions.html#Ease_Util_Extensions_AssemblyExtensions_GetResourceBySuffixAsString_
  commentId: Overload:Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString
  isSpec: "True"
  fullName: Ease.Util.Extensions.AssemblyExtensions.GetResourceBySuffixAsString
  nameWithType: AssemblyExtensions.GetResourceBySuffixAsString
- uid: Ease.Util.Extensions.DirectoryInfoExtensions
  name: DirectoryInfoExtensions
  href: api/Ease.Util.Extensions.DirectoryInfoExtensions.html
  commentId: T:Ease.Util.Extensions.DirectoryInfoExtensions
  fullName: Ease.Util.Extensions.DirectoryInfoExtensions
  nameWithType: DirectoryInfoExtensions
- uid: Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName(System.IO.DirectoryInfo,System.Int32)
  name: GetTempFileName(DirectoryInfo, Int32)
  href: api/Ease.Util.Extensions.DirectoryInfoExtensions.html#Ease_Util_Extensions_DirectoryInfoExtensions_GetTempFileName_System_IO_DirectoryInfo_System_Int32_
  commentId: M:Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName(System.IO.DirectoryInfo,System.Int32)
  fullName: Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName(System.IO.DirectoryInfo, System.Int32)
  nameWithType: DirectoryInfoExtensions.GetTempFileName(DirectoryInfo, Int32)
- uid: Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName*
  name: GetTempFileName
  href: api/Ease.Util.Extensions.DirectoryInfoExtensions.html#Ease_Util_Extensions_DirectoryInfoExtensions_GetTempFileName_
  commentId: Overload:Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName
  isSpec: "True"
  fullName: Ease.Util.Extensions.DirectoryInfoExtensions.GetTempFileName
  nameWithType: DirectoryInfoExtensions.GetTempFileName
- uid: Ease.Util.Extensions.EnumerableExtensions
  name: EnumerableExtensions
  href: api/Ease.Util.Extensions.EnumerableExtensions.html
  commentId: T:Ease.Util.Extensions.EnumerableExtensions
  fullName: Ease.Util.Extensions.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch*
  name: ImmediateBatch
  href: api/Ease.Util.Extensions.EnumerableExtensions.html#Ease_Util_Extensions_EnumerableExtensions_ImmediateBatch_
  commentId: Overload:Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch
  isSpec: "True"
  fullName: Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch
  nameWithType: EnumerableExtensions.ImmediateBatch
- uid: Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0}})
  name: ImmediateBatch<TElement>(IEnumerable<TElement>, Int32, Action<IEnumerable<TElement>>)
  href: api/Ease.Util.Extensions.EnumerableExtensions.html#Ease_Util_Extensions_EnumerableExtensions_ImmediateBatch__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_Action_System_Collections_Generic_IEnumerable___0___
  commentId: M:Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0}})
  name.vb: ImmediateBatch(Of TElement)(IEnumerable(Of TElement), Int32, Action(Of IEnumerable(Of TElement)))
  fullName: Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch<TElement>(System.Collections.Generic.IEnumerable<TElement>, System.Int32, System.Action<System.Collections.Generic.IEnumerable<TElement>>)
  fullName.vb: Ease.Util.Extensions.EnumerableExtensions.ImmediateBatch(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement), System.Int32, System.Action(Of System.Collections.Generic.IEnumerable(Of TElement)))
  nameWithType: EnumerableExtensions.ImmediateBatch<TElement>(IEnumerable<TElement>, Int32, Action<IEnumerable<TElement>>)
  nameWithType.vb: EnumerableExtensions.ImmediateBatch(Of TElement)(IEnumerable(Of TElement), Int32, Action(Of IEnumerable(Of TElement)))
- uid: Ease.Util.Extensions.EnumerableExtensions.YieldedBatch*
  name: YieldedBatch
  href: api/Ease.Util.Extensions.EnumerableExtensions.html#Ease_Util_Extensions_EnumerableExtensions_YieldedBatch_
  commentId: Overload:Ease.Util.Extensions.EnumerableExtensions.YieldedBatch
  isSpec: "True"
  fullName: Ease.Util.Extensions.EnumerableExtensions.YieldedBatch
  nameWithType: EnumerableExtensions.YieldedBatch
- uid: Ease.Util.Extensions.EnumerableExtensions.YieldedBatch``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0}})
  name: YieldedBatch<TElement>(IEnumerable<TElement>, Int32, Action<IEnumerable<TElement>>)
  href: api/Ease.Util.Extensions.EnumerableExtensions.html#Ease_Util_Extensions_EnumerableExtensions_YieldedBatch__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_Action_System_Collections_Generic_IEnumerable___0___
  commentId: M:Ease.Util.Extensions.EnumerableExtensions.YieldedBatch``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Action{System.Collections.Generic.IEnumerable{``0}})
  name.vb: YieldedBatch(Of TElement)(IEnumerable(Of TElement), Int32, Action(Of IEnumerable(Of TElement)))
  fullName: Ease.Util.Extensions.EnumerableExtensions.YieldedBatch<TElement>(System.Collections.Generic.IEnumerable<TElement>, System.Int32, System.Action<System.Collections.Generic.IEnumerable<TElement>>)
  fullName.vb: Ease.Util.Extensions.EnumerableExtensions.YieldedBatch(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement), System.Int32, System.Action(Of System.Collections.Generic.IEnumerable(Of TElement)))
  nameWithType: EnumerableExtensions.YieldedBatch<TElement>(IEnumerable<TElement>, Int32, Action<IEnumerable<TElement>>)
  nameWithType.vb: EnumerableExtensions.YieldedBatch(Of TElement)(IEnumerable(Of TElement), Int32, Action(Of IEnumerable(Of TElement)))
- uid: Ease.Util.Extensions.EnumExtensions
  name: EnumExtensions
  href: api/Ease.Util.Extensions.EnumExtensions.html
  commentId: T:Ease.Util.Extensions.EnumExtensions
  fullName: Ease.Util.Extensions.EnumExtensions
  nameWithType: EnumExtensions
- uid: Ease.Util.Extensions.EnumExtensions.GetAllEnumValues*
  name: GetAllEnumValues
  href: api/Ease.Util.Extensions.EnumExtensions.html#Ease_Util_Extensions_EnumExtensions_GetAllEnumValues_
  commentId: Overload:Ease.Util.Extensions.EnumExtensions.GetAllEnumValues
  isSpec: "True"
  fullName: Ease.Util.Extensions.EnumExtensions.GetAllEnumValues
  nameWithType: EnumExtensions.GetAllEnumValues
- uid: Ease.Util.Extensions.EnumExtensions.GetAllEnumValues``1(``0)
  name: GetAllEnumValues<TEnum>(TEnum)
  href: api/Ease.Util.Extensions.EnumExtensions.html#Ease_Util_Extensions_EnumExtensions_GetAllEnumValues__1___0_
  commentId: M:Ease.Util.Extensions.EnumExtensions.GetAllEnumValues``1(``0)
  name.vb: GetAllEnumValues(Of TEnum)(TEnum)
  fullName: Ease.Util.Extensions.EnumExtensions.GetAllEnumValues<TEnum>(TEnum)
  fullName.vb: Ease.Util.Extensions.EnumExtensions.GetAllEnumValues(Of TEnum)(TEnum)
  nameWithType: EnumExtensions.GetAllEnumValues<TEnum>(TEnum)
  nameWithType.vb: EnumExtensions.GetAllEnumValues(Of TEnum)(TEnum)
- uid: Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor*
  name: GetAllEnumValuesFor
  href: api/Ease.Util.Extensions.EnumExtensions.html#Ease_Util_Extensions_EnumExtensions_GetAllEnumValuesFor_
  commentId: Overload:Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor
  isSpec: "True"
  fullName: Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor
  nameWithType: EnumExtensions.GetAllEnumValuesFor
- uid: Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor``1
  name: GetAllEnumValuesFor<TEnum>()
  href: api/Ease.Util.Extensions.EnumExtensions.html#Ease_Util_Extensions_EnumExtensions_GetAllEnumValuesFor__1
  commentId: M:Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor``1
  name.vb: GetAllEnumValuesFor(Of TEnum)()
  fullName: Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor<TEnum>()
  fullName.vb: Ease.Util.Extensions.EnumExtensions.GetAllEnumValuesFor(Of TEnum)()
  nameWithType: EnumExtensions.GetAllEnumValuesFor<TEnum>()
  nameWithType.vb: EnumExtensions.GetAllEnumValuesFor(Of TEnum)()
- uid: Ease.Util.Extensions.StringExtensions
  name: StringExtensions
  href: api/Ease.Util.Extensions.StringExtensions.html
  commentId: T:Ease.Util.Extensions.StringExtensions
  fullName: Ease.Util.Extensions.StringExtensions
  nameWithType: StringExtensions
- uid: Ease.Util.Extensions.StringExtensions.ToValueOr*
  name: ToValueOr
  href: api/Ease.Util.Extensions.StringExtensions.html#Ease_Util_Extensions_StringExtensions_ToValueOr_
  commentId: Overload:Ease.Util.Extensions.StringExtensions.ToValueOr
  isSpec: "True"
  fullName: Ease.Util.Extensions.StringExtensions.ToValueOr
  nameWithType: StringExtensions.ToValueOr
- uid: Ease.Util.Extensions.StringExtensions.ToValueOr``1(System.String,``0,System.IFormatProvider)
  name: ToValueOr<T>(String, T, IFormatProvider)
  href: api/Ease.Util.Extensions.StringExtensions.html#Ease_Util_Extensions_StringExtensions_ToValueOr__1_System_String___0_System_IFormatProvider_
  commentId: M:Ease.Util.Extensions.StringExtensions.ToValueOr``1(System.String,``0,System.IFormatProvider)
  name.vb: ToValueOr(Of T)(String, T, IFormatProvider)
  fullName: Ease.Util.Extensions.StringExtensions.ToValueOr<T>(System.String, T, System.IFormatProvider)
  fullName.vb: Ease.Util.Extensions.StringExtensions.ToValueOr(Of T)(System.String, T, System.IFormatProvider)
  nameWithType: StringExtensions.ToValueOr<T>(String, T, IFormatProvider)
  nameWithType.vb: StringExtensions.ToValueOr(Of T)(String, T, IFormatProvider)
- uid: Ease.Util.Temp
  name: Ease.Util.Temp
  href: api/Ease.Util.Temp.html
  commentId: N:Ease.Util.Temp
  fullName: Ease.Util.Temp
  nameWithType: Ease.Util.Temp
- uid: Ease.Util.Temp.IScopedTempFile
  name: IScopedTempFile
  href: api/Ease.Util.Temp.IScopedTempFile.html
  commentId: T:Ease.Util.Temp.IScopedTempFile
  fullName: Ease.Util.Temp.IScopedTempFile
  nameWithType: IScopedTempFile
- uid: Ease.Util.Temp.IScopedTempFile.OpenAppend
  name: OpenAppend()
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenAppend
  commentId: M:Ease.Util.Temp.IScopedTempFile.OpenAppend
  fullName: Ease.Util.Temp.IScopedTempFile.OpenAppend()
  nameWithType: IScopedTempFile.OpenAppend()
- uid: Ease.Util.Temp.IScopedTempFile.OpenAppend*
  name: OpenAppend
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenAppend_
  commentId: Overload:Ease.Util.Temp.IScopedTempFile.OpenAppend
  isSpec: "True"
  fullName: Ease.Util.Temp.IScopedTempFile.OpenAppend
  nameWithType: IScopedTempFile.OpenAppend
- uid: Ease.Util.Temp.IScopedTempFile.OpenRead
  name: OpenRead()
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenRead
  commentId: M:Ease.Util.Temp.IScopedTempFile.OpenRead
  fullName: Ease.Util.Temp.IScopedTempFile.OpenRead()
  nameWithType: IScopedTempFile.OpenRead()
- uid: Ease.Util.Temp.IScopedTempFile.OpenRead*
  name: OpenRead
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenRead_
  commentId: Overload:Ease.Util.Temp.IScopedTempFile.OpenRead
  isSpec: "True"
  fullName: Ease.Util.Temp.IScopedTempFile.OpenRead
  nameWithType: IScopedTempFile.OpenRead
- uid: Ease.Util.Temp.IScopedTempFile.OpenWrite
  name: OpenWrite()
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenWrite
  commentId: M:Ease.Util.Temp.IScopedTempFile.OpenWrite
  fullName: Ease.Util.Temp.IScopedTempFile.OpenWrite()
  nameWithType: IScopedTempFile.OpenWrite()
- uid: Ease.Util.Temp.IScopedTempFile.OpenWrite*
  name: OpenWrite
  href: api/Ease.Util.Temp.IScopedTempFile.html#Ease_Util_Temp_IScopedTempFile_OpenWrite_
  commentId: Overload:Ease.Util.Temp.IScopedTempFile.OpenWrite
  isSpec: "True"
  fullName: Ease.Util.Temp.IScopedTempFile.OpenWrite
  nameWithType: IScopedTempFile.OpenWrite
- uid: Ease.Util.Temp.IScopedTempFileManager
  name: IScopedTempFileManager
  href: api/Ease.Util.Temp.IScopedTempFileManager.html
  commentId: T:Ease.Util.Temp.IScopedTempFileManager
  fullName: Ease.Util.Temp.IScopedTempFileManager
  nameWithType: IScopedTempFileManager
- uid: Ease.Util.Temp.IScopedTempFileManager.New
  name: New()
  href: api/Ease.Util.Temp.IScopedTempFileManager.html#Ease_Util_Temp_IScopedTempFileManager_New
  commentId: M:Ease.Util.Temp.IScopedTempFileManager.New
  fullName: Ease.Util.Temp.IScopedTempFileManager.New()
  nameWithType: IScopedTempFileManager.New()
- uid: Ease.Util.Temp.IScopedTempFileManager.New*
  name: New
  href: api/Ease.Util.Temp.IScopedTempFileManager.html#Ease_Util_Temp_IScopedTempFileManager_New_
  commentId: Overload:Ease.Util.Temp.IScopedTempFileManager.New
  isSpec: "True"
  fullName: Ease.Util.Temp.IScopedTempFileManager.New
  nameWithType: IScopedTempFileManager.New
- uid: Ease.Util.Temp.Local
  name: Ease.Util.Temp.Local
  href: api/Ease.Util.Temp.Local.html
  commentId: N:Ease.Util.Temp.Local
  fullName: Ease.Util.Temp.Local
  nameWithType: Ease.Util.Temp.Local
- uid: Ease.Util.Temp.Local.LocalScopedTempFile
  name: LocalScopedTempFile
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html
  commentId: T:Ease.Util.Temp.Local.LocalScopedTempFile
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile
  nameWithType: LocalScopedTempFile
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.#ctor(System.IO.FileInfo)
  name: LocalScopedTempFile(FileInfo)
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile__ctor_System_IO_FileInfo_
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFile.#ctor(System.IO.FileInfo)
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.LocalScopedTempFile(System.IO.FileInfo)
  nameWithType: LocalScopedTempFile.LocalScopedTempFile(FileInfo)
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.#ctor*
  name: LocalScopedTempFile
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile__ctor_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFile.#ctor
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.LocalScopedTempFile
  nameWithType: LocalScopedTempFile.LocalScopedTempFile
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects
  name: DisposeManagedObjects()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_DisposeManagedObjects
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects()
  nameWithType: LocalScopedTempFile.DisposeManagedObjects()
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects*
  name: DisposeManagedObjects
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_DisposeManagedObjects_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.DisposeManagedObjects
  nameWithType: LocalScopedTempFile.DisposeManagedObjects
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend
  name: OpenAppend()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenAppend
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend()
  nameWithType: LocalScopedTempFile.OpenAppend()
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend*
  name: OpenAppend
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenAppend_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenAppend
  nameWithType: LocalScopedTempFile.OpenAppend
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead
  name: OpenRead()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenRead
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead()
  nameWithType: LocalScopedTempFile.OpenRead()
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead*
  name: OpenRead
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenRead_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenRead
  nameWithType: LocalScopedTempFile.OpenRead
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite
  name: OpenWrite()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenWrite
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite()
  nameWithType: LocalScopedTempFile.OpenWrite()
- uid: Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite*
  name: OpenWrite
  href: api/Ease.Util.Temp.Local.LocalScopedTempFile.html#Ease_Util_Temp_Local_LocalScopedTempFile_OpenWrite_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFile.OpenWrite
  nameWithType: LocalScopedTempFile.OpenWrite
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager
  name: LocalScopedTempFileManager
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html
  commentId: T:Ease.Util.Temp.Local.LocalScopedTempFileManager
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager
  nameWithType: LocalScopedTempFileManager
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor
  name: LocalScopedTempFileManager()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager__ctor
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.LocalScopedTempFileManager()
  nameWithType: LocalScopedTempFileManager.LocalScopedTempFileManager()
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor(System.IO.DirectoryInfo)
  name: LocalScopedTempFileManager(DirectoryInfo)
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager__ctor_System_IO_DirectoryInfo_
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor(System.IO.DirectoryInfo)
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.LocalScopedTempFileManager(System.IO.DirectoryInfo)
  nameWithType: LocalScopedTempFileManager.LocalScopedTempFileManager(DirectoryInfo)
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor*
  name: LocalScopedTempFileManager
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager__ctor_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFileManager.#ctor
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.LocalScopedTempFileManager
  nameWithType: LocalScopedTempFileManager.LocalScopedTempFileManager
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile
  name: AllocateFile()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager_AllocateFile
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile()
  nameWithType: LocalScopedTempFileManager.AllocateFile()
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile*
  name: AllocateFile
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager_AllocateFile_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.AllocateFile
  nameWithType: LocalScopedTempFileManager.AllocateFile
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects()
  nameWithType: LocalScopedTempFileManager.DisposeUnmanagedObjects()
- uid: Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Temp.Local.LocalScopedTempFileManager.html#Ease_Util_Temp_Local_LocalScopedTempFileManager_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.Local.LocalScopedTempFileManager.DisposeUnmanagedObjects
  nameWithType: LocalScopedTempFileManager.DisposeUnmanagedObjects
- uid: Ease.Util.Temp.Memory
  name: Ease.Util.Temp.Memory
  href: api/Ease.Util.Temp.Memory.html
  commentId: N:Ease.Util.Temp.Memory
  fullName: Ease.Util.Temp.Memory
  nameWithType: Ease.Util.Temp.Memory
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile
  name: MemoryScopedTempFile
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html
  commentId: T:Ease.Util.Temp.Memory.MemoryScopedTempFile
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile
  nameWithType: MemoryScopedTempFile
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects
  name: DisposeManagedObjects()
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_DisposeManagedObjects
  commentId: M:Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects()
  nameWithType: MemoryScopedTempFile.DisposeManagedObjects()
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects*
  name: DisposeManagedObjects
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_DisposeManagedObjects_
  commentId: Overload:Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.DisposeManagedObjects
  nameWithType: MemoryScopedTempFile.DisposeManagedObjects
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend
  name: OpenAppend()
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenAppend
  commentId: M:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend()
  nameWithType: MemoryScopedTempFile.OpenAppend()
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend*
  name: OpenAppend
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenAppend_
  commentId: Overload:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend
  isSpec: "True"
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenAppend
  nameWithType: MemoryScopedTempFile.OpenAppend
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead
  name: OpenRead()
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenRead
  commentId: M:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead()
  nameWithType: MemoryScopedTempFile.OpenRead()
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead*
  name: OpenRead
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenRead_
  commentId: Overload:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead
  isSpec: "True"
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenRead
  nameWithType: MemoryScopedTempFile.OpenRead
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite
  name: OpenWrite()
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenWrite
  commentId: M:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite()
  nameWithType: MemoryScopedTempFile.OpenWrite()
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite*
  name: OpenWrite
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFile.html#Ease_Util_Temp_Memory_MemoryScopedTempFile_OpenWrite_
  commentId: Overload:Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite
  isSpec: "True"
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFile.OpenWrite
  nameWithType: MemoryScopedTempFile.OpenWrite
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFileManager
  name: MemoryScopedTempFileManager
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFileManager.html
  commentId: T:Ease.Util.Temp.Memory.MemoryScopedTempFileManager
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFileManager
  nameWithType: MemoryScopedTempFileManager
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile
  name: AllocateFile()
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFileManager.html#Ease_Util_Temp_Memory_MemoryScopedTempFileManager_AllocateFile
  commentId: M:Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile()
  nameWithType: MemoryScopedTempFileManager.AllocateFile()
- uid: Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile*
  name: AllocateFile
  href: api/Ease.Util.Temp.Memory.MemoryScopedTempFileManager.html#Ease_Util_Temp_Memory_MemoryScopedTempFileManager_AllocateFile_
  commentId: Overload:Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile
  isSpec: "True"
  fullName: Ease.Util.Temp.Memory.MemoryScopedTempFileManager.AllocateFile
  nameWithType: MemoryScopedTempFileManager.AllocateFile
- uid: Ease.Util.Temp.ScopedTempFile
  name: ScopedTempFile
  href: api/Ease.Util.Temp.ScopedTempFile.html
  commentId: T:Ease.Util.Temp.ScopedTempFile
  fullName: Ease.Util.Temp.ScopedTempFile
  nameWithType: ScopedTempFile
- uid: Ease.Util.Temp.ScopedTempFile.AddDisposeAction(System.Action)
  name: AddDisposeAction(Action)
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_AddDisposeAction_System_Action_
  commentId: M:Ease.Util.Temp.ScopedTempFile.AddDisposeAction(System.Action)
  fullName: Ease.Util.Temp.ScopedTempFile.AddDisposeAction(System.Action)
  nameWithType: ScopedTempFile.AddDisposeAction(Action)
- uid: Ease.Util.Temp.ScopedTempFile.AddDisposeAction*
  name: AddDisposeAction
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_AddDisposeAction_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.AddDisposeAction
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.AddDisposeAction
  nameWithType: ScopedTempFile.AddDisposeAction
- uid: Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects
  name: DisposeManagedObjects()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_DisposeManagedObjects
  commentId: M:Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects
  fullName: Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects()
  nameWithType: ScopedTempFile.DisposeManagedObjects()
- uid: Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects*
  name: DisposeManagedObjects
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_DisposeManagedObjects_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.DisposeManagedObjects
  nameWithType: ScopedTempFile.DisposeManagedObjects
- uid: Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects
  fullName: Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects()
  nameWithType: ScopedTempFile.DisposeUnmanagedObjects()
- uid: Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.DisposeUnmanagedObjects
  nameWithType: ScopedTempFile.DisposeUnmanagedObjects
- uid: Ease.Util.Temp.ScopedTempFile.NullifyLargeFields
  name: NullifyLargeFields()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_NullifyLargeFields
  commentId: M:Ease.Util.Temp.ScopedTempFile.NullifyLargeFields
  fullName: Ease.Util.Temp.ScopedTempFile.NullifyLargeFields()
  nameWithType: ScopedTempFile.NullifyLargeFields()
- uid: Ease.Util.Temp.ScopedTempFile.NullifyLargeFields*
  name: NullifyLargeFields
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_NullifyLargeFields_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.NullifyLargeFields
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.NullifyLargeFields
  nameWithType: ScopedTempFile.NullifyLargeFields
- uid: Ease.Util.Temp.ScopedTempFile.OpenAppend
  name: OpenAppend()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenAppend
  commentId: M:Ease.Util.Temp.ScopedTempFile.OpenAppend
  fullName: Ease.Util.Temp.ScopedTempFile.OpenAppend()
  nameWithType: ScopedTempFile.OpenAppend()
- uid: Ease.Util.Temp.ScopedTempFile.OpenAppend*
  name: OpenAppend
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenAppend_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.OpenAppend
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.OpenAppend
  nameWithType: ScopedTempFile.OpenAppend
- uid: Ease.Util.Temp.ScopedTempFile.OpenRead
  name: OpenRead()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenRead
  commentId: M:Ease.Util.Temp.ScopedTempFile.OpenRead
  fullName: Ease.Util.Temp.ScopedTempFile.OpenRead()
  nameWithType: ScopedTempFile.OpenRead()
- uid: Ease.Util.Temp.ScopedTempFile.OpenRead*
  name: OpenRead
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenRead_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.OpenRead
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.OpenRead
  nameWithType: ScopedTempFile.OpenRead
- uid: Ease.Util.Temp.ScopedTempFile.OpenWrite
  name: OpenWrite()
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenWrite
  commentId: M:Ease.Util.Temp.ScopedTempFile.OpenWrite
  fullName: Ease.Util.Temp.ScopedTempFile.OpenWrite()
  nameWithType: ScopedTempFile.OpenWrite()
- uid: Ease.Util.Temp.ScopedTempFile.OpenWrite*
  name: OpenWrite
  href: api/Ease.Util.Temp.ScopedTempFile.html#Ease_Util_Temp_ScopedTempFile_OpenWrite_
  commentId: Overload:Ease.Util.Temp.ScopedTempFile.OpenWrite
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFile.OpenWrite
  nameWithType: ScopedTempFile.OpenWrite
- uid: Ease.Util.Temp.ScopedTempFileManager
  name: ScopedTempFileManager
  href: api/Ease.Util.Temp.ScopedTempFileManager.html
  commentId: T:Ease.Util.Temp.ScopedTempFileManager
  fullName: Ease.Util.Temp.ScopedTempFileManager
  nameWithType: ScopedTempFileManager
- uid: Ease.Util.Temp.ScopedTempFileManager.AllocateFile
  name: AllocateFile()
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_AllocateFile
  commentId: M:Ease.Util.Temp.ScopedTempFileManager.AllocateFile
  fullName: Ease.Util.Temp.ScopedTempFileManager.AllocateFile()
  nameWithType: ScopedTempFileManager.AllocateFile()
- uid: Ease.Util.Temp.ScopedTempFileManager.AllocateFile*
  name: AllocateFile
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_AllocateFile_
  commentId: Overload:Ease.Util.Temp.ScopedTempFileManager.AllocateFile
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFileManager.AllocateFile
  nameWithType: ScopedTempFileManager.AllocateFile
- uid: Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects
  name: DisposeUnmanagedObjects()
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_DisposeUnmanagedObjects
  commentId: M:Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects
  fullName: Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects()
  nameWithType: ScopedTempFileManager.DisposeUnmanagedObjects()
- uid: Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects*
  name: DisposeUnmanagedObjects
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_DisposeUnmanagedObjects_
  commentId: Overload:Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFileManager.DisposeUnmanagedObjects
  nameWithType: ScopedTempFileManager.DisposeUnmanagedObjects
- uid: Ease.Util.Temp.ScopedTempFileManager.New
  name: New()
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_New
  commentId: M:Ease.Util.Temp.ScopedTempFileManager.New
  fullName: Ease.Util.Temp.ScopedTempFileManager.New()
  nameWithType: ScopedTempFileManager.New()
- uid: Ease.Util.Temp.ScopedTempFileManager.New*
  name: New
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_New_
  commentId: Overload:Ease.Util.Temp.ScopedTempFileManager.New
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFileManager.New
  nameWithType: ScopedTempFileManager.New
- uid: Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields
  name: NullifyLargeFields()
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_NullifyLargeFields
  commentId: M:Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields
  fullName: Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields()
  nameWithType: ScopedTempFileManager.NullifyLargeFields()
- uid: Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields*
  name: NullifyLargeFields
  href: api/Ease.Util.Temp.ScopedTempFileManager.html#Ease_Util_Temp_ScopedTempFileManager_NullifyLargeFields_
  commentId: Overload:Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields
  isSpec: "True"
  fullName: Ease.Util.Temp.ScopedTempFileManager.NullifyLargeFields
  nameWithType: ScopedTempFileManager.NullifyLargeFields
